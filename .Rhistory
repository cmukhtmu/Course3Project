df2 = data.frame(id=sample(1:10), x=rnorm(10))
df2 = data.frame(id=sample(1:10), y=rnorm(10))
df1 = data.frame(id=sample(1:10), x=rnorm(10))
df1
df2
arrange(df1,id)
arrange(df2,id)
arrange(join(df1,df2),id)
library(plyr)
library(plyr); library(dplyr)
arrange(join(df1,df2),id)
?quantile
quantile
quantile(x=rnorm(1001))
quantile(x, probs = c(0.1,0.5,1,2,5,10,50,NA)/100)
x
x = rnorm(1001)
x
quantile(x, probs = c(0.1,0.5,1,2,5,10,50,NA)/100)
x = sample(5)
x
quantile(x, probs = c(0.1,0.5,1,2,5,10,50,NA)/100)
quantile(x, probs = c(1,25,50,100)/100)
quantile(x, probs = c(1,25,50,100))
quantile(x, probs = (0.1,0.25))
quantile(x, probs = 0.1)
quantile(x, probs = 0.01)
quantile(x, probs = 0.5)
quantile(x, probs = 0.25)
quantile(x, probs = 0.75)
quantile(x, probs = 0.99)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "fsshid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf", "FPUMSDataDict.pdf")
dt1 = data.table("fsshid.csv")
dt1 = data.table()
dt1 = fread("fsshid.csv")
library(datasets)
dt1 = fread("fsshid.csv")
?fread
dt1 = read.table("fsshid.csv")
head(dt1)
dt1 = read.table("fsshid.csv",header = T, sep = ",", quote="")
head(dt1)
dt2 = dt1[,dt1$ACR == 3 & dt1$AGS == 6]
dt2 = dt1[,dt1$ACR == 3]
dt2 = dt1[dt1$ACR == 3 & dt1$AGS == 6,]
nrow(dt1)
nrow(dt2)
dt1$al = dt1$ACR == 3 & dt1$AGS == 6
head(dt1)
tail(dt1)
which(al)
which(dt1$al)
install.packages("jpeg")
library(jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "./jeff.jpg", mode  = "wb")
imagie <-readJPEG("./jeff.jpg", native = TRUE)
quantile(imagie, probs = c(0.3, 0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "Country.csv")
gdpdt = read.table("gdp.csv",header = T, sep = ",", quote="", skip = 6, nrows = 465, skipNul = T)
gdpdt = read.table("gdp.csv",header = T, sep = ",", quote="", skip = 6, nrows = 465)
gdpdt = read.table("gdp.csv",header = T, sep = ",", quote="", skip = 6)
gdpdt = read.csv("GDP.csv", header = T, sep = ",", fill = T)
head(gdpdt)
tail(gdpdt)
gdpdt = read.table("gdp.csv",header = T, sep = ",")
head(gdpdt)
tail(gdpdt)
countrydt = read.table("country.csv",header = T, sep = ",")
countrydt = read.table("country.csv",header = T, sep = ",")
countrydt = read.table("country.csv",header = T, sep = ",")
gdpdt = read.table("gdp.csv",header = T, sep = ",")
head(gdpt)
head(gdpdt)
tail(gdpdt)
gdpdt = read.table("gdp.csv",header = T, sep = ",")
tail(gdpdt)
head(gdpdt)
gdpdt = read.table("gdp.csv",header = T, sep = ",")
head(gdpdt)
tail(gdpdt)
gdpdt = read.table("gdp.csv",header = T, sep = ",", skipNul = T)
tail(gdpdt)
gdpdt = read.table("gdp.csv",header = T, sep = ",", skipNul = T, strip.white = T)
tail(gdpdt)
gdpdt = read.table("gdp.csv",header = T, sep = ",", skipNul = T, strip.white = T, stringsAsFactors = default.stringsAsFactors())
tail(gdpdt)
library("data.table")
FGDP <- data.table::fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=4
, nrows = 190
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "Country.csv")
FGDP <- data.table::fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=4
, nrows = 190
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
FGDP <- data.table::fread('GDP.csv'
, skip=4
, nrows = 190
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
FEDSTATS_Country <- data.table::fread('Country.csv'
)
mergedDT <- merge(FGDP, FEDSTATS_Country, by = 'CountryCode')
nrow(mergedDT)
countryDT
View(gdpdt)
View(FEDSTATS_Country)
countrydt
countrydt = read.csv("Country.csv", header=T, sep=",")
countryt = fread("Country.csv")
gdpt = fread("GDP.csv", skip=4,nrows=190, select = c(1,2,4,5), col.names = c("CountryCode", "Rank", "Economy","Total"))
mergedt = merge(gdpt, countryt, by.x = "CountryCode", by.y="CountryCode")
mergedt = merge(countryt, gdpt, by.x = "CountryCode", by.y="CountryCode")
sortedt = mergedt[order(-Rank)]
head(sortedt, 15)
tail(sortedt, 15)
sortedt = mergedt[order(as.numeric(-Rank))]
sortedt = mergedt[order(Rank)]
tail(sortedt[,c("Economy")], 15)
tail(sortedt[,c("Economy", "Rank")], 15)
tail(sortedt[,c("Economy", "Rank")], 20)
View(sortedt)
numerict = sortedt[,Economy=as.character(Economy), Rank=as.numeric(Rank)]
numerict = sortedt[,Economy=as.character(sortedt$Economy), Rank=as.numeric(sortedt$Rank)]
mergedt[,32] = as.numeric(mergedt[,32])
mergedt[,mergedt$Rank] = as.numeric(mergedt[,mergedt$Rank])
mergedt[,mergedt$Ranking] = as.numeric(mergedt[,mergedt$Rank])
sortedt = as.data.table(mergedt, stringsAsFactors=F)
sortedt[order(sortedt[,sortedt$Rank])]
sortedt[,sortedt$Rank] = as.numeric(sortedt[,sortedt$Rank])
sortedt = as.data.frame(mergedt, stringsAsFactors=F)
sortedt[,sortedt$Rank] = as.numeric(sortedt[,sortedt$Rank])
sortedt[,32] = as.numeric(sortedt[,32])
sortedt[order(sorted[,32])
]
sortedt[order(sortedt[,32])]
sortedt
sortedt = sortedt[order(sortedt[,32]),]
tail(sortedt, 15)
tail(sortedt[,c(32,33)], 15)
sortedt = sortedt[order(sortedt[,-"Rank"]),]
sortedt = sortedt[order(sortedt[,-Rank]),]
sortedt = sortedt[order(sortedt[,-sortedt$Rank]),]
sortedt[order(sortedt[,-sortedt$Rank]),]
sortedt = as.data.frame(mergedt, stringsAsFactors=F)
sortedt[,sortedt$Rank] = as.numeric(sortedt[,sortedt$Rank])
sortedt[,32] = as.numeric(sortedt[,32])
sortedt[order(sortedt[,-32]),]
sortedt = as.data.frame(mergedt, stringsAsFactors=F)
View(sortedt)
sortedt[,32] = as.numeric(sortedt[,32])
sortedt[order(sortedt[,32]),]
sortedt[order(sortedt[,32]),c(32,33)]
sortedt[order(sortedt[,-(32)]),c(32,33)]
sortedt[order(sortedt[,32]),c(32,33)]
?order
sortedt[order(sortedt[,32],decreasing = T),c(32,33)]
head(sortedt[order(sortedt[,32],decreasing = T),c(32,33)],12:14)
head(sortedt[order(sortedt[,32],decreasing = T),c(32,33)],15)
mergedt[order(-Rank)][13,.(Economy)]
mergedt = merge(countryt, gdpt, by="CountryCode")
mergedt[order(-Rank)][13,.(Economy)]
View(mergedt)
hioecd = mergedt[mergedt$`Income Group` == 'High income: nonOECD']
View(hioecd)
average(hioecd$Rank)
mean(hioecd$Rank)
mean(as.numeric(hioecd$Rank))
View(mergedDT)
lowoecd = mergedt[mergedt$`Income Group` == 'High income: OECD']
mean(as.numeric(lowoecd$Rank))
?quanitle
quantile(x = mergedt$Rank, probs=seq(0,1,by=0.20))
quantile(x = as.numeric(mergedt$Rank), probs=seq(0,1,by=0.20))
breaks = quantile(x = as.numeric(mergedt$Rank), probs=seq(0,1,by=0.20), na.rm=T)
breaks
download.file("https://data.baltimorecity.gov/api/views/hdyb-27ak/rows.csv?accessType=DOWNLOAD", "cameras.csv")
read.csv("cameras.csv")
cameraDT = read.csv("cameras.csv")
names(cameraDT)
tolower(names(cameraDT))
reviews = read.csv("reviews.csv")
solutions = read.csv("solutions.csv")
head(reviews,2)
head(solutions,2)
sub("_", "", names(reviews),)
head(reviews,2)
reviews.names = sub("_", "", names(reviews),)
head(reviews,2)
View(reviews)
reviews.names
grep("Alameda", cameraDT$cameraLocation)
grep("Alameda", cameraDT$Location.1)
head(cameraDT)
grep("Redwood", cameraDT$Location.1)
grep("Redwood", cameraDT$cameraLocation)
table(grepl("Redwood", cameraDT$cameraLocation))
grepl("Redwood", cameraDT$cameraLocation))
grepl("Redwood", cameraDT$cameraLocation)
redwoodcameradata = cameraDT[grepl("Redwood", cameraDT$cameraLocation),]
redwoodcameradata
redwoodcameradata = cameraDT[cameraDT$cameraLocation %in% "Redwood",]
redwoodcameradata
grep("Redwood", cameraDT$cameraLocation,value=T)
grep("Alameda", cameraDT$cameraLocation,value=T)
grep("Alamada", cameraDT$cameraLocation,value=T)
grep("Alamada", cameraDT$cameraLocation)
length(grep("Alamada", cameraDT$cameraLocation))
library(stringr)
nchar("Mani Jani")
substr("Mani Jani", 1,4)
paste("mani", "jani")
?cut
breaks = quantile(mergedt[,Rank], probs = seq(0,1,0.2), na.rm = T)
breaks
mergedt$quantileGDP = cut(mergedt[,Rank], breaks=breaks)
mergedt$quantileGDP = cut(mergedt[,as.numeric(Rank)], breaks=breaks)
mergedt$quantileGDP
head(mergedt)
date()
Sys.Date()
d2 = Sys.Date()
format(d2, "%a %b %d")
as.Date(date)
as.Date(date())
as.Date(date(), "%a %b %d")
z = as.Date(date(), "%a %b %d")
z[1]
z[2]
library(lubridate)
?Sys.timezone
wday("1Jan2013")
x = dmy("1Jan2013")
wday(x)
wday(x, label = T)
?POSIXlt
fsshid = data.table::fread("getdata_data_ss06hid.csv")
?strsplit
?strsplit()
strsplit(fsshid, "wgtp")
colnames = names(fsshid)
colnames
splitnames = strsplit(colnames,"wgtp")
splitnames
FGDP <- data.table::fread('GDP.csv'
, skip=4
, nrows = 190
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
head(FGDP)
mean(as.numeric(FGDP$Total))
tail(FGDP)
as.numeric(FGDP$Total)
replaceCommas<-function(x){
x<-as.numeric(gsub("\\,", "", x))
}
FGDP$Total = replaceCommas(FGDP$Total)
tail(FGDP)
mean(as.numeric(FGDP$Total))
as.numeric(FGDP$Total)
View(FGDP)
head(FGDP)
FGDP = FGDP[2:190,]
mean(as.numeric(FGDP$Total))
FGDP <- data.table::fread('GDP.csv'
, skip=5
, nrows = 205
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
tail(FGDP)
FGDP <- data.table::fread('GDP.csv'
, skip=5
, nrows = 200
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
tail(FGDP)
FGDP$Total = replaceCommas(FGDP$Total)
mean(as.numeric(FGDP$Total))
FGDP <- data.table::fread('getdata_data_GDP.csv'
, skip=5
, nrows = 190
, select = c(1, 2, 4, 5)
, col.names=c("CountryCode", "Rank", "Economy", "Total")
)
FGDP$Total = replaceCommas(FGDP$Total)
mean(as.numeric(FGDP$Total))
countryNames = FGDP$Economy
countryNames
grep("^United",countryNames),4
grep("^United",countryNames)
grepl("^United",countryNames)
Country <- data.table::fread('getdata_data_EDSTATS_Country.csv'
)
names(FGDP)
names(Country)
mergedDT <- merge(FGDP, Country, by = 'CountryCode')
fiscalYears = mergedDT$`Special Notes`
grep("^Fiscal year end: June", fiscalYears)
length(grep("^Fiscal year end: June", fiscalYears))
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
head(sampleTimes, 20)
length(grep("^2012", sampleTimes))
dateSampleTimes = format(sampleTimes, "%Y-%m-%d")
head(dateSampleTimes)
class(sampleTimes)
class(dateSampleTimes)
wday(ymd(sampleTimes), label = T)
length(grep("^Mon", wday(ymd(sampleTimes), label = T)))
mysampletimes = sampleTimes[grep("^2012"),]
class(sampleTimes)
length(grep("^Mon", wday(sampleTimes), label = T))
mysampletimes = format(sampleTimes, "%a %Y %m")
head(mysampletimes)
length(grep("^Mon 2012", mysampletimes))
library(dplyer)
library(dplyr)
setwd("C:/MachineLearning/repos/Course3Project")
Subject_Test = read.table("./UCI HAR Dataset/test/subject_test.txt")
head(Subject_Test)
x_Test = read.table("./UCI HAR Dataset/test/X_test.txt")
head(x_Test)
y_Test = read.table("./UCI HAR Dataset/test/y_test.txt")
head(y_Test)
Subject_Train = read.table("./UCI HAR Dataset/train/subject_train.txt")
x_Train = read.table("./UCI HAR Dataset/train/X_train.txt")
y_Train = read.table("./UCI HAR Dataset/train/y_train.txt")
head(Subject_Train)
head(x_Train)
head(y_Train)
Activity_labels = read.table("./UCI HAR Dataset/activity_labels.txt")
head(Activity_labels)
Features = read.table("./UCI HAR Dataset/features.txt")
head(Features)
x_Total = rbind(x_Test, x_Train)
head(x_Total)
head(Features)
names(x_Total) = Features$V2
head(x_Total)
names(Subject_Test)
names(Subject_Test) = "Subject"
names(Subject_Train) = "Subject"
head(x_Total)
x_Total = cbind(x_Total, rbind(Subject_Test, Subject_Train))
head(x_Total)
names(y_Test)
names(y_Test) = "ActivityNo"
names(y_Train) = "ActivityNo"
x_Total = cbind(x_Total, rbind(y_Test, y_Train))
x_Total = merge(x_Total, Activity_labels, by.x = "ActivityNo", by.y = "V1")
measures = grep("mean()", names(x_Total))
measures = c(measures, grep("std()", names(x_Total)))
head(measures)
remove = grep("meanFreq", names(x_Total))
measures = measures[! measures %in% remove]
measures = sort(measures)
measures = c(measures, 563, 564)
x_Extract = x_Total[,measures]
x_Extract = rename(x_Extract, Activity_labels=V2)
x_Extract = rename(x_Extract, ActivityLabel=V2)
x_Extract = rename(x_Extract, V2 = ActivityLabel)
names(x_Extract)
?rename
rename(x_Extract, V2 = ActivityLabel)
names(iris)
load(iris)
data("iris")
names(iris)
rename(iris, petal_length = Petal.Length)
rename(iris, petal_length = Petal.Length)
rename(iris,x = Petal.Length,replace = petal_length)
rename(iris,x = "Petal.Length",replace = "petal_length")
names(x_Extract) = gsub("Acc", "-Acceleration", names(x_Extract))
names(x_Extract) = gsub("Mag", "-Magnitude", names(x_Extract))
head(x_Extract)
tail(names(x_Extract))
x_Summary = x_Extract %>%
group_by(V2, Subject) %>%
summarise_each(funs(mean))
x_Summary = x_Extract %>%
group_by(V2, Subject) %>%
summarise_all(funs(mean))
x_Summary
names(x_Extract) = gsub("V2", "ActivityLabel", names(x_Extract))
head(x_Extract)
x_Summary = x_Extract %>%
+     group_by(ActivityLabel, Subject) %>%
+     summarise_all(funs(mean))
x_Summary = x_Extract %>%
+     group_by(V2, Subject) %>%
+     summarise_all(funs(mean))
x_Summary = x_Extract %>%
+     group_by(x_Extract$ActivityLabel, Subject) %>%
+     summarise_all(funs(mean))
x_Summary = x_Extract %>%
+     group_by(ActivityLabel, Subject) %>%
+     summarise_all(funs(mean))
getpwd()
getwd()
Subject_Test <- read.table(".UCI HAR Dataset/test/subject_test.txt")
Subject_Test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
View(Subject_Test)
Subject_Train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
View(Subject_Train)
Total_Subject = rbind(Subject_Train, Subject_Test)
View(Total_Subject)
names(Total_Subject) = c("Subjects")
X_Test <- read.table("./UCI HAR Dataset/test/X_test.txt")
View(X_Test)
X_Train <- read.table("./UCI HAR Dataset/train/X_train.txt")
View(X_Train)
X_Total = rbind(X_Test, X_Train)
features <- read.table("./UCI HAR Dataset/features.txt")
View(features)
names(X_Total) = features$V2
View(X_Total)
y_Test <- read.table("./UCI HAR Dataset/test/y_test.txt")
y_Train <- read.table("./UCI HAR Dataset/train/y_train.txt")
Y_Total = rbind(y_Test, y_Train)
View(Y_Total)
names(Y_Total) = c("ActivityID")
TidyData1 = cbind(X_Total,Y_Total)
View(TidyData1)
Activity_Labels <- read.table("./UCI HAR Dataset/activity_labels.txt")
View(Activity_Labels)
names(Activity_Labels) = c("ActivityID", "ActivityLabel")
TidyData11 = merge(TidyData1, Activity_Labels, by = "ActivityID")
View(TidyData11)
TidyData11 = merge(Activity_Labels, TidyData1, by = "ActivityID")
View(Features)
mean_cols = grep("mean()", Features$V2)
std_cols = grep("std()", Features$V2)
mean_std_cols = rbind(mean_cols, std_cols)
View(lowoecd)
View(lowoecd)
length(mean_cols)
length(std_cols)
length(mean_std_cols)
mean_cols
std_cols
mean_std_cols
mean_std_cols = c(mean_cols, std_cols)
length(mean_std_cols)
TidyData111 = TidyData1[,mean_std_cols]
View(TidyData111)
mean_cols = grep("mean\\(\\)", Features$V2)
length(mean_cols)
std_cols = grep("std\\(\\)", Features$V2)
length(std_cols)
mean_std_cols = c(mean_cols, std_cols)
TidyData111 = TidyData1[,mean_std_cols]
View(TidyData1)
TidyData111 = cbind(TidyData111,Y_Total)
TidyData111 = merge(Activity_Labels, TidyData111, by = "ActivityID")
View(Total_Subject)
names(Total_Subject) = c("SubjectID")
TidyData111 = cbind(Total_Subject, TidyData111)
View(TidyData111)
names(TidyData111) = gsub("Acc", "-Acceleration", names(TidyData111))
View(TidyData111)
names(TidyData111) = gsub("Mag", "-Magnitude", names(TidyData111))
names(TidyData111) = gsub("tBody", "Body", names(TidyData111))
names(TidyData111) = gsub("fBody", "Body", names(TidyData111))
names(TidyData111) = gsub("tGravity", "Gravity", names(TidyData111))
names(TidyData111) = gsub("()", "", names(TidyData111))
View(TidyData111)
names(TidyData111) = gsub("\\(\\)", "", names(TidyData111))
View(TidyData111)
TidyData2 = TidyData111 %>%
group_by(ActivityID, SubjectID) %>%
summarise_each(funs = mean())
TidyData2 = TidyData111 %>%
group_by(ActivityID, SubjectID) %>%
summarise_all(funs = mean())
TidyData2 = TidyData111 %>%
group_by(ActivityID, SubjectID) %>%
summarise_all(funs = mean
)
TidyData2 = TidyData111 %>%
group_by(ActivityID, SubjectID) %>%
summarise_all(funs = mean)
TidyData2 = TidyData111 %>%
group_by(ActivityID, SubjectID) %>%
summarise_all(.tbl = TidyData111, .funs = mean)
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
myTidyData1 = read.table("TidyData1.csv")
myTidyData1 = read.csv("TidyData1.csv",header = T,sep = ",")
View(myTidyData1)
names(myTidyData1)
